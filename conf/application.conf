# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~|
play.i18n.langs = [ "en" ]

play.http.filters="security.Filters"
play.modules {
 # By default, Play will load any class called Module that is defined
 # in the root package (the "app" directory), or you can define them
 # explicitly below.
 # If there are any built-in modulmy.es that you want to disable, you can list them here.
 enabled += "be.objectify.deadbolt.java.DeadboltModule"
 enabled += "be.objectify.deadbolt.java.filters.DeadboltRoutePathFilterModule"
 enabled += "security.CustomDeadboltHook"

 # If there are any built-in modules that you want to disable, you can list them here.
 #disabled += ""
}

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=org.postgresql.Driver
db.default.url="jdbc:postgresql://172.24.42.60:5432/Cardiopal"
db.default.username="postgres"
db.default.password="admin"
db.default.jndiName=DefaultDS

ebean.default = ["models.*"]
# Evolutions
# ~~~~~
# You can disable evolutions if needed
play.evolutions.enabled=true

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false
#Execution contexts
akka {
 actor {
   default-dispatcher {
    fork-join-executor{
     parallelism-min=10
     parallelism-factor=1.0
     parallelism-max=64
     task-peeking-mode="LIFO"
    }
    throughput = 1
   }

  default-dispatcher {
   fork-join-executor {
    # Settings this to 1 instead of 3 seems to improve performance.
    parallelism-factor = 1.0

    # @richdougherty: Not sure why this is set below the Akka
    # default.
    parallelism-max = 64

    # Setting this to LIFO changes the fork-join-executor
    # to use a stack discipline for task scheduling. This usually
    # improves throughput at the cost of possibly increasing
    # latency and risking task starvation (which should be rare).
    task-peeking-mode = LIFO
   }
  }
 }
}
db-context {
 fork-join-executor {
  parallelism-min = 100
  parallelism-max = 100
 }
}
# Deadbolt
include "play-authenticate/deadbolt.conf"


# SMTP
include "play-authenticate/smtp.conf"

# And play authenticate
include "play-authenticate/mine.conf"
play.ws {
 # Sets HTTP requests not to follow 302 requests
 #followRedirects = false

 # Sets the maximum number of open HTTP connections for the client.
 ahc.maxConnectionsTotal = 1000

 ## WS SSL
 # https://www.playframework.com/documentation/latest/WsSSL
 # ~~~~~
 ssl {
  # Configuring HTTPS with Play WS does not require programming.  You can
  # set up both trustManager and keyManager for mutual authentication, and
  # turn on JSSE debugging in development with a reload.
  #debug.handshake = true
  #trustManager = {
  #  stores = [
  #    { type = "JKS", path = "exampletrust.jks" }
  #  ]
  #}
 }
}
authentication {
 auth0 {
  clientSecret="ZlBvgJwCRvhY-yVCE0KCI8F_VSR5jqJHZtuBpzvOQhUxZoK5DQ9fLtPEFog--s3s"
  clientId="PS6hCtCPeAOdXivuvWT0anauFHgHK5Dr"
  domain="rikeyjo.auth0.com"
  redirectURI="http://localhost:9000/callback"
 }
}
